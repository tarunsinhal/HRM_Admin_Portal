# Generated by Django 3.2.6 on 2022-02-18 09:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('operations', '0030_merge_20220218_1436'),
    ]

    operations = [
        migrations.CreateModel(
            name='Adhoc_types',
            fields=[
                ('item_name', models.CharField(max_length=50)),
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Detail_types',
            fields=[
                ('detail_name', models.CharField(max_length=50)),
                ('detail_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='engagementJoining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(max_length=50)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('last_working_date', models.DateField(blank=True, null=True)),
                ('loi', models.CharField(blank=True, max_length=100)),
                ('offer_letter', models.CharField(blank=True, max_length=100)),
                ('nda_signed', models.CharField(max_length=100)),
                ('joining_letter', models.CharField(blank=True, max_length=100)),
                ('joining_documents', models.CharField(blank=True, max_length=100)),
                ('joining_hamper', models.CharField(blank=True, max_length=100)),
                ('relieving_letter', models.CharField(blank=True, max_length=100)),
                ('experience_letter', models.CharField(blank=True, max_length=100)),
                ('laptop_charger', models.CharField(max_length=100)),
                ('mouse_mousepad', models.CharField(max_length=100)),
                ('bag', models.CharField(max_length=100)),
                ('id_card', models.CharField(blank=True, max_length=100)),
                ('induction', models.CharField(blank=True, max_length=100)),
                ('add_to_skype_group', models.CharField(blank=True, max_length=100)),
                ('add_to_whatsapp_group', models.CharField(blank=True, max_length=100)),
                ('remove_from_skype_group', models.CharField(blank=True, max_length=100)),
                ('remove_from_whatsapp_group', models.CharField(blank=True, max_length=100)),
                ('onedrive_access', models.CharField(max_length=100)),
                ('microsoft_account_created', models.CharField(blank=True, max_length=100)),
                ('microsoft_account_deleted', models.CharField(blank=True, max_length=100)),
                ('gmail_account', models.CharField(max_length=100)),
                ('skype_id', models.CharField(max_length=100)),
                ('system_configuration', models.CharField(blank=True, max_length=100)),
                ('system_format', models.CharField(blank=True, max_length=100)),
                ('email_account', models.CharField(max_length=100)),
                ('add_upwork_account_to_team', models.CharField(blank=True, max_length=100)),
                ('add_upwork_account', models.CharField(blank=True, max_length=100)),
                ('remove_upwork_account_from_team', models.CharField(blank=True, max_length=100)),
                ('close_upwork_account', models.CharField(blank=True, max_length=100)),
                ('fnf', models.CharField(blank=True, max_length=100)),
                ('details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='operations.detail_types')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalAdhocItems',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('product', models.CharField(max_length=50)),
                ('quantity', models.CharField(max_length=50)),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('amount', models.PositiveIntegerField()),
                ('paid_by', models.CharField(max_length=100)),
                ('purchase_date', models.DateField()),
                ('advance_pay', models.PositiveIntegerField(blank=True, default=0)),
                ('balance_amount', models.PositiveIntegerField(blank=True, default=0)),
                ('received_date', models.DateField(blank=True, null=True)),
                ('additional_info', models.CharField(blank=True, max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='operations.adhoc_types')),
            ],
            options={
                'verbose_name': 'historical adhoc items',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalengagementJoining',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('employee_name', models.CharField(max_length=50)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('last_working_date', models.DateField(blank=True, null=True)),
                ('loi', models.CharField(blank=True, max_length=100)),
                ('offer_letter', models.CharField(blank=True, max_length=100)),
                ('nda_signed', models.CharField(max_length=100)),
                ('joining_letter', models.CharField(blank=True, max_length=100)),
                ('joining_documents', models.CharField(blank=True, max_length=100)),
                ('joining_hamper', models.CharField(blank=True, max_length=100)),
                ('relieving_letter', models.CharField(blank=True, max_length=100)),
                ('experience_letter', models.CharField(blank=True, max_length=100)),
                ('laptop_charger', models.CharField(max_length=100)),
                ('mouse_mousepad', models.CharField(max_length=100)),
                ('bag', models.CharField(max_length=100)),
                ('id_card', models.CharField(blank=True, max_length=100)),
                ('induction', models.CharField(blank=True, max_length=100)),
                ('add_to_skype_group', models.CharField(blank=True, max_length=100)),
                ('add_to_whatsapp_group', models.CharField(blank=True, max_length=100)),
                ('remove_from_skype_group', models.CharField(blank=True, max_length=100)),
                ('remove_from_whatsapp_group', models.CharField(blank=True, max_length=100)),
                ('onedrive_access', models.CharField(max_length=100)),
                ('microsoft_account_created', models.CharField(blank=True, max_length=100)),
                ('microsoft_account_deleted', models.CharField(blank=True, max_length=100)),
                ('gmail_account', models.CharField(max_length=100)),
                ('skype_id', models.CharField(max_length=100)),
                ('system_configuration', models.CharField(blank=True, max_length=100)),
                ('system_format', models.CharField(blank=True, max_length=100)),
                ('email_account', models.CharField(max_length=100)),
                ('add_upwork_account_to_team', models.CharField(blank=True, max_length=100)),
                ('add_upwork_account', models.CharField(blank=True, max_length=100)),
                ('remove_upwork_account_from_team', models.CharField(blank=True, max_length=100)),
                ('close_upwork_account', models.CharField(blank=True, max_length=100)),
                ('fnf', models.CharField(blank=True, max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='operations.detail_types')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical engagement joining',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalofficeEvents',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date', models.DateField()),
                ('event_name', models.CharField(max_length=100)),
                ('activity_planned', models.CharField(blank=True, max_length=100)),
                ('item', models.JSONField(blank=True, max_length=100, null=True)),
                ('food', models.JSONField(blank=True, max_length=100, null=True)),
                ('remarks', models.CharField(blank=True, max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical office events',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalrepairServices',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('service_date', models.DateField()),
                ('service_type', models.CharField(max_length=50)),
                ('charges', models.PositiveIntegerField()),
                ('vendor_name', models.CharField(max_length=50)),
                ('contact_no', models.CharField(max_length=10)),
                ('paid_by', models.CharField(max_length=50)),
                ('payment_mode', models.CharField(choices=[('cash', 'Cash'), ('digital', 'Digital'), ('company_account', 'Company_Account'), ('others', 'Others')], max_length=50)),
                ('next_service_date', models.DateField()),
                ('aditional_info', models.CharField(blank=True, max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service_of', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='operations.vendorcontactlist')),
            ],
            options={
                'verbose_name': 'historical repair services',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalvendorContactList',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('service', models.CharField(max_length=50)),
                ('vendor_name', models.CharField(max_length=100)),
                ('contact_no', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Phone number must be positive intergers.Up to 10 digits allowed.', regex='^\\d{10}$')])),
                ('alternate_no', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be positive intergers.Up to 10 digits allowed.', regex='^\\d{10}$')])),
                ('nominal_charges', models.PositiveIntegerField(blank=True, null=True)),
                ('aditional_info', models.CharField(blank=True, max_length=200, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical vendor contact list',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='officeEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('event_name', models.CharField(max_length=100)),
                ('activity_planned', models.CharField(blank=True, max_length=100)),
                ('item', models.JSONField(blank=True, max_length=100, null=True)),
                ('food', models.JSONField(blank=True, max_length=100, null=True)),
                ('remarks', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.DeleteModel(
            name='dailyWeeklyItems',
        ),
        migrations.RemoveField(
            model_name='historicalfoodinventory',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalfoodinventory',
            name='product',
        ),
        migrations.RemoveField(
            model_name='historicalfoodinventory',
            name='type',
        ),
        migrations.RenameField(
            model_name='historicalt_shirt_inventory',
            old_name='user',
            new_name='user_name',
        ),
        migrations.RenameField(
            model_name='t_shirt_inventory',
            old_name='user',
            new_name='user_name',
        ),
        migrations.AddField(
            model_name='adhocitems',
            name='advance_pay',
            field=models.PositiveIntegerField(blank=True, default=0),
        ),
        migrations.AddField(
            model_name='adhocitems',
            name='balance_amount',
            field=models.PositiveIntegerField(blank=True, default=0),
        ),
        migrations.AddField(
            model_name='adhocitems',
            name='received_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalrecurringitems',
            name='additional_info',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='historicalrecurringitems',
            name='frequency',
            field=models.CharField(choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Bimonthly', 'Bimonthly'), ('Monthly', 'Monthly')], default='Daily', max_length=10),
        ),
        migrations.AddField(
            model_name='historicalt_shirt_inventory',
            name='error_message',
            field=models.CharField(blank=True, default=None, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='historicalt_shirt_inventory',
            name='received_quantity',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='recurringitems',
            name='additional_info',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='recurringitems',
            name='frequency',
            field=models.CharField(choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Bimonthly', 'Bimonthly'), ('Monthly', 'Monthly')], default='Daily', max_length=10),
        ),
        migrations.AddField(
            model_name='t_shirt_inventory',
            name='error_message',
            field=models.CharField(blank=True, default=None, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='t_shirt_inventory',
            name='received_quantity',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='adhocitems',
            name='additional_info',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AlterField(
            model_name='adhocitems',
            name='paid_by',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='adhocitems',
            name='price',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalrecurringitems',
            name='amount',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='historicalrecurringitems',
            name='discount',
            field=models.PositiveIntegerField(blank=True, default=0),
        ),
        migrations.AlterField(
            model_name='historicalrecurringitems',
            name='next_order_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalrecurringitems',
            name='price',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalt_shirt_inventory',
            name='receiving_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='recurringitems',
            name='amount',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='recurringitems',
            name='discount',
            field=models.PositiveIntegerField(blank=True, default=0),
        ),
        migrations.AlterField(
            model_name='recurringitems',
            name='next_order_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='recurringitems',
            name='paid_by',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='recurringitems',
            name='price',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='repairservices',
            name='paid_by',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='t_shirt_inventory',
            name='receiving_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.DeleteModel(
            name='FoodInventory',
        ),
        migrations.DeleteModel(
            name='HistoricalFoodInventory',
        ),
        migrations.AddField(
            model_name='adhocitems',
            name='type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='operations.adhoc_types'),
            preserve_default=False,
        ),
    ]
